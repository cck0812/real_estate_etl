# syntax=docker/dockerfile:1
ARG FUNCTION_DIR="/code/"
ARG RUNTIME_VERSION="3.6"
ARG DISTRO_VERSION="3.12"

# Install spark driver, build dependencies
FROM python:${RUNTIME_VERSION}-alpine${DISTRO_VERSION} AS python-alpine
RUN apk add --no-cache \
    libstdc++ \
    libxslt \
    libc-dev \
    bash \
    openjdk11

# Build dependencies
FROM python-alpine AS build-image
RUN apk add --no-cache \
    build-base \
    libtool \
    autoconf \
    automake \
    libexecinfo-dev \
    make \
    cmake \
    libxml2-dev \
    libxslt-dev
ARG FUNCTION_DIR
WORKDIR ${FUNCTION_DIR}
COPY requirements.txt ${FUNCTION_DIR}
RUN mkdir dist && \
    pip wheel -r ${FUNCTION_DIR}requirements.txt -w ${FUNCTION_DIR}dist/

# Multi-stage build: grab a fresh copy of the base image
FROM python-alpine
ENV PYTHONUNBUFFERED=1
ARG FUNCTION_DIR
WORKDIR ${FUNCTION_DIR}
RUN mkdir dist
COPY --from=build-image ${FUNCTION_DIR}dist/* ${FUNCTION_DIR}dist/
RUN pip install --no-index --find-links dist/* dist/*
COPY . ${FUNCTION_DIR}